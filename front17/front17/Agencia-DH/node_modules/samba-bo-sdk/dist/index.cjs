"use strict";var J=Object.defineProperty;var W=Object.getOwnPropertyDescriptor;var L=Object.getOwnPropertyNames;var H=Object.prototype.hasOwnProperty;var V=(e,t)=>{for(var a in t)J(e,a,{get:t[a],enumerable:!0})},M=(e,t,a,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let m of L(t))!H.call(e,m)&&m!==a&&J(e,m,{get:()=>t[m],enumerable:!(r=W(t,m))||r.enumerable});return e};var q=e=>M(J({},"__esModule",{value:!0}),e);var Pr={};V(Pr,{acceptUserInvite:()=>hr,aggregate:()=>Jt,auth:()=>N,authenticateShare:()=>sr,authentication:()=>Z,clearCache:()=>Zo,compareContentVersion:()=>br,createCollection:()=>de,createComment:()=>Se,createContentVersion:()=>Me,createContentVersions:()=>Ve,createDashboard:()=>le,createDashboards:()=>ue,createField:()=>fe,createFlow:()=>xe,createFlows:()=>Qe,createFolder:()=>Ce,createFolders:()=>Te,createItem:()=>ge,createItems:()=>Re,createNotification:()=>Pe,createNotifications:()=>Be,createOperation:()=>Ie,createOperations:()=>je,createPanel:()=>Fe,createPanels:()=>Ae,createPermission:()=>we,createPermissions:()=>Ee,createPolicies:()=>Ne,createPolicy:()=>ve,createPreset:()=>Je,createPresets:()=>Ue,createRelation:()=>De,createRole:()=>ke,createRoles:()=>$e,createSambaBO:()=>te,createShare:()=>Ge,createShares:()=>_e,createTranslation:()=>We,createTranslations:()=>Ke,createUser:()=>He,createUsers:()=>Le,createWebhook:()=>ze,createWebhooks:()=>qe,customEndpoint:()=>Br,deleteCollection:()=>Ye,deleteComment:()=>Xe,deleteContentVersion:()=>Et,deleteContentVersions:()=>Ft,deleteDashboard:()=>et,deleteDashboards:()=>Ze,deleteField:()=>tt,deleteFile:()=>ot,deleteFiles:()=>at,deleteFlow:()=>mt,deleteFlows:()=>rt,deleteFolder:()=>nt,deleteFolders:()=>st,deleteItem:()=>pt,deleteItems:()=>it,deleteNotification:()=>ht,deleteNotifications:()=>ct,deleteOperation:()=>St,deleteOperations:()=>yt,deletePanel:()=>ut,deletePanels:()=>dt,deletePermission:()=>ft,deletePermissions:()=>lt,deletePolicies:()=>bt,deletePolicy:()=>Ot,deletePreset:()=>xt,deletePresets:()=>Qt,deleteRelation:()=>Tt,deleteRole:()=>Rt,deleteRoles:()=>Ct,deleteShare:()=>Bt,deleteShares:()=>gt,deleteTranslation:()=>jt,deleteTranslations:()=>Pt,deleteUser:()=>At,deleteUsers:()=>It,deleteWebhook:()=>Nt,deleteWebhooks:()=>wt,disableTwoFactor:()=>lr,enableTwoFactor:()=>ur,formatFields:()=>U,generateHash:()=>ar,generateTwoFactorSecret:()=>dr,generateUid:()=>v,getAuthEndpoint:()=>F,graphql:()=>oe,importFile:()=>Oe,inviteShare:()=>nr,inviteUser:()=>cr,login:()=>ne,logout:()=>ie,memoryStorage:()=>$,messageCallback:()=>E,passwordRequest:()=>pe,passwordReset:()=>ce,pong:()=>k,promoteContentVersion:()=>Or,queryToParams:()=>D,randomString:()=>Qr,readActivities:()=>vt,readActivity:()=>Ut,readAssetArrayBuffer:()=>kt,readAssetBlob:()=>$t,readAssetRaw:()=>Dt,readCollection:()=>Gt,readCollections:()=>_t,readContentVersion:()=>Ua,readContentVersions:()=>va,readDashboard:()=>Wt,readDashboards:()=>Kt,readExtensions:()=>Lt,readField:()=>Mt,readFields:()=>Ht,readFieldsByCollection:()=>Vt,readFile:()=>zt,readFiles:()=>qt,readFlow:()=>Yt,readFlows:()=>Xt,readFolder:()=>ea,readFolders:()=>Zt,readGraphqlSdl:()=>Ga,readItem:()=>aa,readItemPermissions:()=>ha,readItems:()=>ta,readMe:()=>Na,readNotification:()=>ra,readNotifications:()=>oa,readOpenApiSpec:()=>La,readOperation:()=>sa,readOperations:()=>ma,readPanel:()=>ia,readPanels:()=>na,readPermission:()=>ca,readPermissions:()=>pa,readPolicies:()=>Sa,readPolicy:()=>da,readPolicyGlobals:()=>ua,readPreset:()=>fa,readPresets:()=>la,readProviders:()=>he,readRelation:()=>Qa,readRelationByCollection:()=>Oa,readRelations:()=>ba,readRevision:()=>Ta,readRevisions:()=>xa,readRole:()=>Ra,readRoles:()=>Ca,readRolesMe:()=>ga,readSettings:()=>Ba,readShare:()=>ja,readShareInfo:()=>ir,readShares:()=>Pa,readSingleton:()=>Ia,readTranslation:()=>Fa,readTranslations:()=>Aa,readUser:()=>wa,readUserPermissions:()=>ya,readUsers:()=>Ea,readWebhook:()=>Da,readWebhooks:()=>Ja,realtime:()=>me,refresh:()=>ye,registerUser:()=>yr,registerUserVerify:()=>Sr,rest:()=>Tr,saveToContentVersion:()=>fr,schemaApply:()=>$a,schemaDiff:()=>ka,schemaSnapshot:()=>_a,serverHealth:()=>Ka,serverInfo:()=>Wa,serverPing:()=>Ha,sleep:()=>se,staticToken:()=>ee,throwIfCoreCollection:()=>b,throwIfEmpty:()=>o,triggerFlow:()=>tr,triggerOperation:()=>mr,updateCollection:()=>Ma,updateCollectionsBatch:()=>qa,updateComment:()=>Va,updateContentVersion:()=>zo,updateContentVersions:()=>Mo,updateContentVersionsBatch:()=>qo,updateDashboard:()=>Ya,updateDashboards:()=>za,updateDashboardsBatch:()=>Xa,updateExtension:()=>Za,updateField:()=>eo,updateFile:()=>oo,updateFiles:()=>to,updateFilesBatch:()=>ao,updateFlow:()=>so,updateFlows:()=>ro,updateFlowsBatch:()=>mo,updateFolder:()=>po,updateFolders:()=>no,updateFoldersBatch:()=>io,updateItem:()=>yo,updateItems:()=>co,updateItemsBatch:()=>ho,updateMe:()=>Vo,updateNotification:()=>lo,updateNotifications:()=>So,updateNotificationsBatch:()=>uo,updateOperation:()=>Oo,updateOperations:()=>fo,updateOperationsBatch:()=>bo,updatePanel:()=>To,updatePanels:()=>Qo,updatePanelsBatch:()=>xo,updatePermission:()=>go,updatePermissions:()=>Co,updatePermissionsBatch:()=>Ro,updatePolicies:()=>Bo,updatePoliciesBatch:()=>Po,updatePolicy:()=>jo,updatePreset:()=>Fo,updatePresets:()=>Io,updatePresetsBatch:()=>Ao,updateRelation:()=>Eo,updateRole:()=>vo,updateRoles:()=>wo,updateRolesBatch:()=>No,updateSettings:()=>Uo,updateShare:()=>$o,updateShares:()=>Jo,updateSharesBatch:()=>Do,updateSingleton:()=>ko,updateTranslation:()=>Ko,updateTranslations:()=>_o,updateTranslationsBatch:()=>Go,updateUser:()=>Ho,updateUsers:()=>Wo,updateUsersBatch:()=>Lo,updateWebhook:()=>Yo,updateWebhooks:()=>Xo,uploadFiles:()=>be,utilitySort:()=>pr,utilsExport:()=>er,utilsImport:()=>rr,verifyHash:()=>or,withOptions:()=>Cr,withSearch:()=>Rr,withToken:()=>gr});module.exports=q(Pr);function F(e){return e?`/auth/login/${e}`:"/auth/login"}var w="/",z=(e,t)=>(e.endsWith(w)&&(e=e.slice(0,-1)),t.startsWith(w)||(t=w+t),e+t),C=(e,t,a)=>{let r=e.pathname===w?t:z(e.pathname,t),m=new globalThis.URL(r,e);if(a)for(let[p,n]of Object.entries(D(a)))if(n&&typeof n=="object"&&!Array.isArray(n))for(let[c,h]of Object.entries(n))m.searchParams.set(`${p}[${c}]`,String(h));else m.searchParams.set(p,n);return m};function _(e){return typeof e!="object"||!e?!1:"headers"in e&&"ok"in e&&"json"in e&&typeof e.json=="function"&&"text"in e&&typeof e.json=="function"}async function G(e){if(!(typeof e!="object"||!e)){if(_(e)){let t=e.headers.get("Content-Type")?.toLowerCase();if(t?.startsWith("application/json")||t?.startsWith("application/health+json")){let a=await e.json();if(!e.ok)throw a;return"data"in a?a.data:a}if(t?.startsWith("text/html")||t?.startsWith("text/plain")){let a=await e.text();if(!e.ok)throw a;return a}return e}return"data"in e?e.data:e}}var R=async(e,t,a=globalThis.fetch)=>(t.headers=typeof t.headers=="object"&&!Array.isArray(t.headers)?t.headers:{},a(e,t).then(r=>G(r).catch(m=>{let p=typeof m=="object"&&"errors"in m?m.errors:m;return Promise.reject({errors:p,response:r})})));var $=()=>{let e=null;return{get:async()=>e,set:async t=>{e=t}}};var X={msRefreshBeforeExpires:3e4,autoRefresh:!0},Y=2**31-1,Z=(e="cookie",t={})=>a=>{let r={...X,...t},m=null,p=null,n=r.storage??$(),c=async()=>n.set({access_token:null,refresh_token:null,expires:null,expires_at:null}),h=async()=>{try{await m}finally{m=null}},f=async()=>{let y=await n.get();return m||!y?.expires_at||y.expires_at<new Date().getTime()+r.msRefreshBeforeExpires&&I().catch(l=>{}),h()},g=async y=>{let l=y.expires??0;y.expires_at=new Date().getTime()+l,await n.set(y),r.autoRefresh&&l>r.msRefreshBeforeExpires&&l<Y&&(p&&clearTimeout(p),p=setTimeout(()=>{p=null,I().catch(O=>{})},l-r.msRefreshBeforeExpires))},I=async()=>(m=(async()=>{let l=await n.get();await c();let O={method:"POST",headers:{"Content-Type":"application/json"}};"credentials"in r&&(O.credentials=r.credentials);let x={mode:e};e==="json"&&l?.refresh_token&&(x.refresh_token=l.refresh_token),O.body=JSON.stringify(x);let s=C(a.url,"/auth/refresh");return R(s.toString(),O,a.globals.fetch).then(i=>g(i).then(()=>i))})(),m);return{refresh:I,async login(y,l,O={}){await c();let x={email:y,password:l};"otp"in O&&(x.otp=O.otp),x.mode=O.mode??e;let s=F(O.provider),i=C(a.url,s),S={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(x)};"credentials"in r&&(S.credentials=r.credentials);let d=await R(i.toString(),S,a.globals.fetch);return await g(d),d},async logout(){let y=await n.get(),l={method:"POST",headers:{"Content-Type":"application/json"}};"credentials"in r&&(l.credentials=r.credentials);let O={mode:e};e==="json"&&y?.refresh_token&&(O.refresh_token=y.refresh_token),l.body=JSON.stringify(O);let x=C(a.url,"/auth/logout");await R(x.toString(),l,a.globals.fetch),this.stopRefreshing(),await c()},stopRefreshing(){p&&clearTimeout(p)},async getToken(){return await f().catch(()=>{}),(await n.get())?.access_token??null},async setToken(y){return n.set({access_token:y,refresh_token:null,expires:null,expires_at:null})}}};var ee=e=>t=>{let a=e??null;return{async getToken(){return a},async setToken(r){a=r}}};var K={fetch:globalThis.fetch,WebSocket:globalThis.WebSocket,URL:globalThis.URL,logger:globalThis.console},te=(e,t={})=>{let a=t.globals?{...K,...t.globals}:K;return{globals:a,url:new a.URL(e),with(r){return{...this,...r(this)}}}};var ae={},oe=(e={})=>t=>{let a={...ae,...e};return{async query(r,m,p="items"){let n={method:"POST",body:JSON.stringify({query:r,variables:m})};"credentials"in a&&(n.credentials=a.credentials);let c={};if("getToken"in this){let g=await this.getToken();g&&(c.Authorization=`Bearer ${g}`)}"Content-Type"in c||(c["Content-Type"]="application/json"),n.headers=c;let h=p==="items"?"/graphql":"/graphql/system",f=C(t.url,h);return await R(f.toString(),n,t.globals.fetch)}}};function N(e){return JSON.stringify({...e,type:"auth"})}var k=()=>JSON.stringify({type:"pong"});function*v(){let e=1;for(;;)yield String(e),e++}var E=(e,t=1e3)=>new Promise((a,r)=>{let m=h=>{try{let f=JSON.parse(h.data);typeof f=="object"&&!Array.isArray(f)&&f!==null?(n(),a(f)):(n(),p())}catch{n(),a(h)}},p=()=>r(),n=()=>{clearTimeout(c),e.removeEventListener("message",m),e.removeEventListener("error",p),e.removeEventListener("close",p)};e.addEventListener("message",m),e.addEventListener("error",p),e.addEventListener("close",p);let c=setTimeout(()=>{n(),a(void 0)},t)});var re={authMode:"handshake",heartbeat:!0,debug:!1,reconnect:{delay:1e3,retries:10}};function me(e={}){return t=>{e={...re,...e};let a=v(),r={code:"closed"},m={attempts:0,active:!1},p=!1,n=new Set,c=s=>"getToken"in s,h=(s,...i)=>e.debug&&t.globals.logger[s]("[SambaBO SDK]",...i),f=async(s,i)=>{let S=new t.globals.URL(s);if(e.authMode==="strict"&&c(i)){let d=await i.getToken();d&&S.searchParams.set("access_token",d)}return S.toString()},g=async s=>{if("url"in e)return await f(e.url,s);if(["ws:","wss:"].includes(t.url.protocol))return await f(t.url,s);let i=new t.globals.URL(t.url.toString());return i.protocol=t.url.protocol==="https:"?"wss:":"ws:",i.pathname="/websocket",await f(i,s)},I=s=>{let i=new Promise((S,d)=>{if(!e.reconnect||p)return d();if(h("info",`reconnect #${m.attempts} `+(m.attempts>=e.reconnect.retries?"maximum retries reached":`trying again in ${Math.max(100,e.reconnect.delay)}ms`)),m.active)return m.active;if(m.attempts>=e.reconnect.retries)return d();setTimeout(()=>s.connect().then(B=>(n.forEach(u=>{s.sendMessage(u)}),B)).then(S).catch(d),Math.max(100,e.reconnect.delay))});m.attempts+=1,m.active=i.catch(()=>{}).finally(()=>{m.active=!1})},y={open:new Set([]),error:new Set([]),close:new Set([]),message:new Set([])};function l(s){return"type"in s&&"status"in s&&"error"in s&&"code"in s.error&&"message"in s.error&&s.type==="auth"&&s.status==="error"}async function O(s,i){if(r.code==="open"){if(s.error.code==="TOKEN_EXPIRED"&&(h("warn","Authentication token expired!"),c(i))){let S=await i.getToken();if(!S)throw Error("No token for re-authenticating the websocket");r.connection.send(N({access_token:S}))}if(s.error.code==="AUTH_TIMEOUT")return r.firstMessage&&e.authMode==="public"?(h("warn",'Authentication failed! Currently the "authMode" is "public" try using "handshake" instead'),e.reconnect=!1):h("warn","Authentication timed out!"),r.connection.close();if(s.error.code==="AUTH_FAILED"){if(r.firstMessage&&e.authMode==="public")return h("warn",'Authentication failed! Currently the "authMode" is "public" try using "handshake" instead'),e.reconnect=!1,r.connection.close();h("warn","Authentication failed!")}}}let x=async s=>{for(;r.code==="open";){let i=await E(r.connection).catch(()=>{});if(i){if(l(i)){await O(i,s),r.firstMessage=!1;continue}if(e.heartbeat&&i.type==="ping"){r.connection.send(k()),r.firstMessage=!1;continue}y.message.forEach(S=>{r.code==="open"&&S.call(r.connection,i)}),r.firstMessage=!1}}};return{async connect(){if(p=!1,r.code==="connecting")return await r.connection;if(r.code!=="closed")throw new Error(`Cannot connect when state is "${r.code}"`);let s=this,i=await g(s);h("info",`Connecting to ${i}...`);let S=new Promise((d,B)=>{let u=!1,Q=new t.globals.WebSocket(i);Q.addEventListener("open",async P=>{if(h("info","Connection open."),r={code:"open",connection:Q,firstMessage:!0},m.attempts=0,m.active=!1,x(s),e.authMode==="handshake"&&c(s)){let T=await s.getToken();if(!T)throw Error("No token for authenticating the websocket. Make sure to provide one or call the login() function beforehand.");Q.send(N({access_token:T}));let A=await E(Q);if(A&&"type"in A&&"status"in A&&A.type==="auth"&&A.status==="ok")h("info","Authentication successful!");else return B("Authentication failed while opening websocket connection")}y.open.forEach(T=>T.call(Q,P)),u=!0,d(Q)}),Q.addEventListener("error",P=>{h("warn","Connection errored."),y.error.forEach(T=>T.call(Q,P)),Q.close(),r={code:"error"},u||B(P)}),Q.addEventListener("close",P=>{h("info","Connection closed."),y.close.forEach(T=>T.call(Q,P)),a=v(),r={code:"closed"},I(this),u||B(P)})});return r={code:"connecting",connection:S},S},disconnect(){p=!0,r.code==="open"&&r.connection.close()},onWebSocket(s,i){if(s==="message"){let S=function(d){if(typeof d.data!="string")return i.call(this,d);try{return i.call(this,JSON.parse(d.data))}catch{return i.call(this,d)}};return y[s].add(S),()=>y[s].delete(S)}return y[s].add(i),()=>y[s].delete(i)},sendMessage(s){if(r.code!=="open")throw new Error('Cannot send messages without an open connection. Make sure you are calling "await client.connect()".');if(typeof s=="string")return r.connection.send(s);"uid"in s||(s.uid=a.next().value),r.connection.send(JSON.stringify(s))},async subscribe(s,i={}){"uid"in i||(i.uid=a.next().value),n.add({...i,collection:s,type:"subscribe"}),r.code!=="open"&&(h("info","No connection available for subscribing!"),await this.connect()),this.sendMessage({...i,collection:s,type:"subscribe"});let S=!0;async function*d(){for(;S&&r.code==="open";){let u=await E(r.connection).catch(()=>{});if(u){if("type"in u&&"status"in u&&u.type==="subscribe"&&u.status==="error")throw u;"type"in u&&"uid"in u&&u.type==="subscription"&&u.uid===i.uid&&(yield u)}}e.reconnect&&m.active&&(await m.active,r.code==="open"&&(r.connection.send(JSON.stringify({...i,collection:s,type:"subscribe"})),yield*d()))}let B=()=>{n.delete({...i,collection:s,type:"subscribe"}),this.sendMessage({uid:i.uid,type:"unsubscribe"}),S=!1};return{subscription:d(),unsubscribe:B}}}}}var se=e=>new Promise(t=>setTimeout(()=>t(),e));var ne=(e,t,a={})=>()=>{let r=F(a.provider),m={email:e,password:t};return"otp"in a&&(m.otp=a.otp),m.mode=a.mode??"cookie",{path:r,method:"POST",body:JSON.stringify(m)}};var ie=(e,t="cookie")=>()=>({path:"/auth/logout",method:"POST",body:JSON.stringify(e?{refresh_token:e,mode:t}:{mode:t})});var pe=(e,t)=>()=>({path:"/auth/password/request",method:"POST",body:JSON.stringify({email:e,...t?{reset_url:t}:{}})});var ce=(e,t)=>()=>({path:"/auth/password/reset",method:"POST",body:JSON.stringify({token:e,password:t})});var he=(e=!1)=>()=>({path:e?"/auth?sessionOnly":"/auth",method:"GET"});var ye=(e="cookie",t)=>()=>({path:"/auth/refresh",method:"POST",body:JSON.stringify(e==="json"?{refresh_token:t,mode:e}:{mode:e})});var Se=(e,t)=>()=>({path:"/activity/comment",params:t??{},body:JSON.stringify(e),method:"POST"});var de=(e,t)=>()=>({path:"/collections",params:t??{},body:JSON.stringify(e),method:"POST"});var ue=(e,t)=>()=>({path:"/dashboards",params:t??{},body:JSON.stringify(e),method:"POST"}),le=(e,t)=>()=>({path:"/dashboards",params:t??{},body:JSON.stringify(e),method:"POST"});var fe=(e,t,a)=>()=>({path:`/fields/${e}`,params:a??{},body:JSON.stringify(t),method:"POST"});var be=(e,t)=>()=>({path:"/files",method:"POST",body:e,params:t??{},headers:{"Content-Type":"multipart/form-data"}}),Oe=(e,t={},a)=>()=>({path:"/files/import",method:"POST",body:JSON.stringify({url:e,data:t}),params:a??{}});var Qe=(e,t)=>()=>({path:"/flows",params:t??{},body:JSON.stringify(e),method:"POST"}),xe=(e,t)=>()=>({path:"/flows",params:t??{},body:JSON.stringify(e),method:"POST"});var Te=(e,t)=>()=>({path:"/folders",params:t??{},body:JSON.stringify(e),method:"POST"}),Ce=(e,t)=>()=>({path:"/folders",params:t??{},body:JSON.stringify(e),method:"POST"});function j(e){return["samba_bo_access","samba_bo_activity","samba_bo_collections","samba_bo_fields","samba_bo_files","samba_bo_folders","samba_bo_migrations","samba_bo_permissions","samba_bo_policies","samba_bo_presets","samba_bo_relations","samba_bo_revisions","samba_bo_roles","samba_bo_sessions","samba_bo_settings","samba_bo_users","samba_bo_webhooks","samba_bo_dashboards","samba_bo_panels","samba_bo_notifications","samba_bo_shares","samba_bo_flows","samba_bo_operations","samba_bo_translations","samba_bo_versions","samba_bo_extensions"].includes(e)}var Re=(e,t,a)=>()=>{let r=String(e);if(j(r))throw new Error("Cannot use createItems for core collections");return{path:`/items/${r}`,params:a??{},body:JSON.stringify(t),method:"POST"}},ge=(e,t,a)=>()=>{let r=String(e);if(j(r))throw new Error("Cannot use createItem for core collections");return{path:`/items/${r}`,params:a??{},body:JSON.stringify(t),method:"POST"}};var Be=(e,t)=>()=>({path:"/notifications",params:t??{},body:JSON.stringify(e),method:"POST"}),Pe=(e,t)=>()=>({path:"/notifications",params:t??{},body:JSON.stringify(e),method:"POST"});var je=(e,t)=>()=>({path:"/operations",params:t??{},body:JSON.stringify(e),method:"POST"}),Ie=(e,t)=>()=>({path:"/operations",params:t??{},body:JSON.stringify(e),method:"POST"});var Ae=(e,t)=>()=>({path:"/panels",params:t??{},body:JSON.stringify(e),method:"POST"}),Fe=(e,t)=>()=>({path:"/panels",params:t??{},body:JSON.stringify(e),method:"POST"});var Ee=(e,t)=>()=>({path:"/permissions",params:t??{},body:JSON.stringify(e),method:"POST"}),we=(e,t)=>()=>({path:"/permissions",params:t??{},body:JSON.stringify(e),method:"POST"});var Ne=(e,t)=>()=>({path:"/policies",params:t??{},body:JSON.stringify(e),method:"POST"}),ve=(e,t)=>()=>({path:"/policies",params:t??{},body:JSON.stringify(e),method:"POST"});var Ue=(e,t)=>()=>({path:"/presets",params:t??{},body:JSON.stringify(e),method:"POST"}),Je=(e,t)=>()=>({path:"/presets",params:t??{},body:JSON.stringify(e),method:"POST"});var De=e=>()=>({path:"/relations",body:JSON.stringify(e),method:"POST"});var $e=(e,t)=>()=>({path:"/roles",params:t??{},body:JSON.stringify(e),method:"POST"}),ke=(e,t)=>()=>({path:"/roles",params:t??{},body:JSON.stringify(e),method:"POST"});var _e=(e,t)=>()=>({path:"/shares",params:t??{},body:JSON.stringify(e),method:"POST"}),Ge=(e,t)=>()=>({path:"/shares",params:t??{},body:JSON.stringify(e),method:"POST"});var Ke=(e,t)=>()=>({path:"/translations",params:t??{},body:JSON.stringify(e),method:"POST"}),We=(e,t)=>()=>({path:"/translations",params:t??{},body:JSON.stringify(e),method:"POST"});var Le=(e,t)=>()=>({path:"/users",params:t??{},body:JSON.stringify(e),method:"POST"}),He=(e,t)=>()=>({path:"/users",params:t??{},body:JSON.stringify(e),method:"POST"});var Ve=(e,t)=>()=>({path:"/versions",params:t??{},body:JSON.stringify(e),method:"POST"}),Me=(e,t)=>()=>({path:"/versions",params:t??{},body:JSON.stringify(e),method:"POST"});var qe=(e,t)=>()=>({path:"/webhooks",params:t??{},body:JSON.stringify(e),method:"POST"}),ze=(e,t)=>()=>({path:"/webhooks",params:t??{},body:JSON.stringify(e),method:"POST"});var Xe=e=>()=>({path:`/activity/comment/${e}`,method:"DELETE"});var Ye=e=>()=>({path:`/collections/${e}`,method:"DELETE"});var U=e=>{let t=(a,r=[])=>{if(typeof a=="object"){let m=[];for(let p in a){let n=a[p]??[];if(Array.isArray(n))for(let c of n)m.push(t(c,[...r,p]));else if(typeof n=="object")for(let c of Object.keys(n)){let h=n[c];for(let f of h)m.push(t(f,[...r,`${p}:${c}`]))}}return m.flatMap(p=>p)}return[...r,String(a)].join(".")};return e.flatMap(a=>t(a))},D=e=>{let t={};Array.isArray(e.fields)&&e.fields.length>0&&(t.fields=U(e.fields).join(",")),e.filter&&Object.keys(e.filter).length>0&&(t.filter=JSON.stringify(e.filter)),e.search&&(t.search=e.search),"sort"in e&&e.sort&&(t.sort=typeof e.sort=="string"?e.sort:e.sort.join(",")),typeof e.limit=="number"&&e.limit>=-1&&(t.limit=String(e.limit)),typeof e.offset=="number"&&e.offset>=0&&(t.offset=String(e.offset)),typeof e.page=="number"&&e.page>=1&&(t.page=String(e.page)),e.deep&&Object.keys(e.deep).length>0&&(t.deep=JSON.stringify(e.deep)),e.alias&&Object.keys(e.alias).length>0&&(t.alias=JSON.stringify(e.alias)),e.aggregate&&Object.keys(e.aggregate).length>0&&(t.aggregate=JSON.stringify(e.aggregate)),e.groupBy&&e.groupBy.length>0&&(t.groupBy=e.groupBy.join(","));for(let[a,r]of Object.entries(e))a in t||(typeof r=="string"||typeof r=="number"||typeof r=="boolean"?t[a]=String(r):t[a]=JSON.stringify(r));return t};var o=(e,t)=>{if(e.length===0)throw new Error(t)};var b=(e,t)=>{if(j(String(e)))throw new Error(t)};var Ze=e=>()=>(o(e,"Keys cannot be empty"),{path:"/dashboards",body:JSON.stringify(e),method:"DELETE"}),et=e=>()=>(o(e,"Key cannot be empty"),{path:`/dashboards/${e}`,method:"DELETE"});var tt=(e,t)=>()=>(o(e,"Collection cannot be empty"),o(t,"Field cannot be empty"),{path:`/fields/${e}/${t}`,method:"DELETE"});var at=e=>()=>(o(e,"Keys cannot be empty"),{path:"/files",body:JSON.stringify(e),method:"DELETE"}),ot=e=>()=>(o(e,"Key cannot be empty"),{path:`/files/${e}`,method:"DELETE"});var rt=e=>()=>(o(e,"Keys cannot be empty"),{path:"/flows",body:JSON.stringify(e),method:"DELETE"}),mt=e=>()=>(o(e,"Key cannot be empty"),{path:`/flows/${e}`,method:"DELETE"});var st=e=>()=>(o(e,"Keys cannot be empty"),{path:"/folders",body:JSON.stringify(e),method:"DELETE"}),nt=e=>()=>(o(e,"Key cannot be empty"),{path:`/folders/${e}`,method:"DELETE"});var it=(e,t)=>()=>{let a={};return o(String(e),"Collection cannot be empty"),b(e,"Cannot use deleteItems for core collections"),Array.isArray(t)?(o(t,"keysOrQuery cannot be empty"),a={keys:t}):(o(Object.keys(t),"keysOrQuery cannot be empty"),a={query:t}),{path:`/items/${e}`,body:JSON.stringify(a),method:"DELETE"}},pt=(e,t)=>()=>(o(String(e),"Collection cannot be empty"),b(e,"Cannot use deleteItem for core collections"),o(String(t),"Key cannot be empty"),{path:`/items/${e}/${t}`,method:"DELETE"});var ct=e=>()=>(o(e,"Keys cannot be empty"),{path:"/notifications",body:JSON.stringify(e),method:"DELETE"}),ht=e=>()=>(o(e,"Key cannot be empty"),{path:`/notifications/${e}`,method:"DELETE"});var yt=e=>()=>(o(e,"Keys cannot be empty"),{path:"/operations",body:JSON.stringify(e),method:"DELETE"}),St=e=>()=>(o(e,"Key cannot be empty"),{path:`/operations/${e}`,method:"DELETE"});var dt=e=>()=>(o(e,"Keys cannot be empty"),{path:"/panels",body:JSON.stringify(e),method:"DELETE"}),ut=e=>()=>(o(e,"Key cannot be empty"),{path:`/panels/${e}`,method:"DELETE"});var lt=e=>()=>(o(e,"Keys cannot be empty"),{path:"/permissions",body:JSON.stringify(e),method:"DELETE"}),ft=e=>()=>(o(String(e),"Key cannot be empty"),{path:`/permissions/${e}`,method:"DELETE"});var bt=e=>()=>(o(e,"Keys cannot be empty"),{path:"/policies",body:JSON.stringify(e),method:"DELETE"}),Ot=e=>()=>(o(String(e),"Key cannot be empty"),{path:`/policies/${e}`,method:"DELETE"});var Qt=e=>()=>(o(e,"Keys cannot be empty"),{path:"/presets",body:JSON.stringify(e),method:"DELETE"}),xt=e=>()=>(o(String(e),"Key cannot be empty"),{path:`/presets/${e}`,method:"DELETE"});var Tt=(e,t)=>()=>(o(e,"Collection cannot be empty"),o(t,"Field cannot be empty"),{path:`/relations/${e}/${t}`,method:"DELETE"});var Ct=e=>()=>(o(e,"Keys cannot be empty"),{path:"/roles",body:JSON.stringify(e),method:"DELETE"}),Rt=e=>()=>(o(String(e),"Key cannot be empty"),{path:`/roles/${e}`,method:"DELETE"});var gt=e=>()=>(o(e,"Keys cannot be empty"),{path:"/shares",body:JSON.stringify(e),method:"DELETE"}),Bt=e=>()=>(o(String(e),"Key cannot be empty"),{path:`/shares/${e}`,method:"DELETE"});var Pt=e=>()=>(o(e,"Keys cannot be empty"),{path:"/translations",body:JSON.stringify(e),method:"DELETE"}),jt=e=>()=>(o(String(e),"Key cannot be empty"),{path:`/translations/${e}`,method:"DELETE"});var It=e=>()=>(o(e,"Keys cannot be empty"),{path:"/users",body:JSON.stringify(e),method:"DELETE"}),At=e=>()=>(o(String(e),"Key cannot be empty"),{path:`/users/${e}`,method:"DELETE"});var Ft=e=>()=>(o(e,"Keys cannot be empty"),{path:"/versions",body:JSON.stringify(e),method:"DELETE"}),Et=e=>()=>(o(e,"Key cannot be empty"),{path:`/versions/${e}`,method:"DELETE"});var wt=e=>()=>(o(e,"Keys cannot be empty"),{path:"/webhooks",body:JSON.stringify(e),method:"DELETE"}),Nt=e=>()=>(o(String(e),"Key cannot be empty"),{path:`/webhooks/${e}`,method:"DELETE"});var vt=e=>()=>({path:"/activity",params:e??{},method:"GET"}),Ut=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/activity/${e}`,params:t??{},method:"GET"});var Jt=(e,t)=>()=>{let a=String(e);return o(a,"Collection cannot be empty"),{path:j(a)?`/${a.substring(9)}`:`/items/${a}`,method:"GET",params:{...t.query??{},...t.groupBy?{groupBy:t.groupBy}:{},aggregate:t.aggregate}}};var Dt=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/assets/${e}`,params:t??{},method:"GET",onResponse:a=>a.body}),$t=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/assets/${e}`,params:t??{},method:"GET",onResponse:a=>a.blob()}),kt=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/assets/${e}`,params:t??{},method:"GET",onResponse:a=>a.arrayBuffer()});var _t=()=>()=>({path:"/collections",method:"GET"}),Gt=e=>()=>(o(e,"Collection cannot be empty"),{path:`/collections/${e}`,method:"GET"});var Kt=e=>()=>({path:"/dashboards",params:e??{},method:"GET"}),Wt=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/dashboards/${e}`,params:t??{},method:"GET"});var Lt=()=>()=>({path:"/extensions/",method:"GET"});var Ht=()=>()=>({path:"/fields",method:"GET"}),Vt=e=>()=>(o(e,"Collection cannot be empty"),{path:`/fields/${e}`,method:"GET"}),Mt=(e,t)=>()=>(o(e,"Collection cannot be empty"),o(t,"Field cannot be empty"),{path:`/fields/${e}/${t}`,method:"GET"});var qt=e=>()=>({path:"/files",params:e??{},method:"GET"}),zt=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/files/${e}`,params:t??{},method:"GET"});var Xt=e=>()=>({path:"/flows",params:e??{},method:"GET"}),Yt=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/flows/${e}`,params:t??{},method:"GET"});var Zt=e=>()=>({path:"/folders",params:e??{},method:"GET"}),ea=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/folders/${e}`,params:t??{},method:"GET"});var ta=(e,t)=>()=>(o(String(e),"Collection cannot be empty"),b(e,"Cannot use readItems for core collections"),{path:`/items/${e}`,params:t??{},method:"GET"}),aa=(e,t,a)=>()=>(o(String(e),"Collection cannot be empty"),b(e,"Cannot use readItem for core collections"),o(String(t),"Key cannot be empty"),{path:`/items/${e}/${t}`,params:a??{},method:"GET"});var oa=e=>()=>({path:"/notifications",params:e??{},method:"GET"}),ra=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/notifications/${e}`,params:t??{},method:"GET"});var ma=e=>()=>({path:"/operations",params:e??{},method:"GET"}),sa=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/operations/${e}`,params:t??{},method:"GET"});var na=e=>()=>({path:"/panels",params:e??{},method:"GET"}),ia=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/panels/${e}`,params:t??{},method:"GET"});var pa=e=>()=>({path:"/permissions",params:e??{},method:"GET"}),ca=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/permissions/${e}`,params:t??{},method:"GET"}),ha=(e,t)=>()=>(o(String(e),"Collection cannot be empty"),{path:`/permissions/me/${t?`${e}/${t}`:`${e}`}`,method:"GET"}),ya=()=>()=>({path:"/permissions/me",method:"GET"});var Sa=e=>()=>({path:"/policies",params:e??{},method:"GET"}),da=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/policies/${e}`,params:t??{},method:"GET"}),ua=()=>()=>({path:"/policies/me/globals",method:"GET"});var la=e=>()=>({path:"/presets",params:e??{},method:"GET"}),fa=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/presets/${e}`,params:t??{},method:"GET"});var ba=()=>()=>({path:"/relations",method:"GET"}),Oa=e=>()=>({path:`/relations/${e}`,method:"GET"}),Qa=(e,t)=>()=>(o(e,"Collection cannot be empty"),o(t,"Field cannot be empty"),{path:`/relations/${e}/${t}`,method:"GET"});var xa=e=>()=>({path:"/revisions",params:e??{},method:"GET"}),Ta=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/revisions/${e}`,params:t??{},method:"GET"});var Ca=e=>()=>({path:"/roles",params:e??{},method:"GET"}),Ra=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/roles/${e}`,params:t??{},method:"GET"}),ga=e=>()=>({path:"/roles/me",params:e??{},method:"GET"});var Ba=e=>()=>({path:"/settings",params:e??{},method:"GET"});var Pa=e=>()=>({path:"/shares",params:e??{},method:"GET"}),ja=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/shares/${e}`,params:t??{},method:"GET"});var Ia=(e,t)=>()=>(o(String(e),"Collection cannot be empty"),b(e,"Cannot use readSingleton for core collections"),{path:`/items/${e}`,params:t??{},method:"GET"});var Aa=e=>()=>({path:"/translations",params:e??{},method:"GET"}),Fa=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/translations/${e}`,params:t??{},method:"GET"});var Ea=e=>()=>({path:"/users",params:e??{},method:"GET"}),wa=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/users/${e}`,params:t??{},method:"GET"}),Na=e=>()=>({path:"/users/me",params:e??{},method:"GET"});var va=e=>()=>({path:"/versions",params:e??{},method:"GET"}),Ua=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/versions/${e}`,params:t??{},method:"GET"});var Ja=e=>()=>({path:"/webhooks",params:e??{},method:"GET"}),Da=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/webhooks/${e}`,params:t??{},method:"GET"});var $a=e=>()=>({method:"POST",path:"/schema/apply",body:JSON.stringify(e)});var ka=(e,t=!1)=>()=>({method:"POST",path:"/schema/diff",params:t?{force:t}:{},body:JSON.stringify(e)});var _a=()=>()=>({method:"GET",path:"/schema/snapshot"});var Ga=(e="item")=>()=>({method:"GET",path:e==="item"?"/server/specs/graphql":"/server/specs/graphql/system"});var Ka=()=>()=>({method:"GET",path:"/server/health"});var Wa=()=>()=>({method:"GET",path:"/server/info"});var La=()=>()=>({method:"GET",path:"/server/specs/oas"});var Ha=()=>()=>({method:"GET",path:"/server/ping"});var Va=(e,t,a)=>()=>(o(String(e),"Key cannot be empty"),{path:`/activity/comment/${e}`,params:a??{},body:JSON.stringify(t),method:"PATCH"});var Ma=(e,t,a)=>()=>(o(e,"Collection cannot be empty"),{path:`/collections/${e}`,params:a??{},body:JSON.stringify(t),method:"PATCH"}),qa=(e,t)=>()=>({path:"/collections",params:t??{},body:JSON.stringify(e),method:"PATCH"});var za=(e,t,a)=>()=>(o(e,"Keys cannot be empty"),{path:"/dashboards",params:a??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),Xa=(e,t)=>()=>({path:"/dashboards",params:t??{},body:JSON.stringify(e),method:"PATCH"}),Ya=(e,t,a)=>()=>(o(e,"Key cannot be empty"),{path:`/dashboards/${e}`,params:a??{},body:JSON.stringify(t),method:"PATCH"});var Za=(e,t,a)=>()=>(e!==null&&o(e,"Bundle cannot be an empty string"),o(t,"Name cannot be empty"),{path:e?`/extensions/${e}/${t}`:`/extensions/${t}`,params:{},body:JSON.stringify(a),method:"PATCH"});var eo=(e,t,a,r)=>()=>(o(e,"Keys cannot be empty"),o(t,"Field cannot be empty"),{path:`/fields/${e}/${t}`,params:r??{},body:JSON.stringify(a),method:"PATCH"});var to=(e,t,a)=>()=>(o(e,"Keys cannot be empty"),{path:"/files",params:a??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),ao=(e,t)=>()=>({path:"/files",params:t??{},body:JSON.stringify(e),method:"PATCH"}),oo=(e,t,a)=>()=>(o(e,"Key cannot be empty"),t instanceof FormData?{path:`/files/${e}`,params:a??{},body:t,method:"PATCH",headers:{"Content-Type":"multipart/form-data"}}:{path:`/files/${e}`,params:a??{},body:JSON.stringify(t),method:"PATCH"});var ro=(e,t,a)=>()=>(o(e,"Keys cannot be empty"),{path:"/flows",params:a??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),mo=(e,t)=>()=>({path:"/flows",params:t??{},body:JSON.stringify(e),method:"PATCH"}),so=(e,t,a)=>()=>(o(e,"Key cannot be empty"),{path:`/flows/${e}`,params:a??{},body:JSON.stringify(t),method:"PATCH"});var no=(e,t,a)=>()=>(o(e,"Keys cannot be empty"),{path:"/folders",params:a??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),io=(e,t)=>()=>({path:"/folders",params:t??{},body:JSON.stringify(e),method:"PATCH"}),po=(e,t,a)=>()=>(o(e,"Key cannot be empty"),{path:`/folders/${e}`,params:a??{},body:JSON.stringify(t),method:"PATCH"});var co=(e,t,a,r)=>()=>{let m={};return o(String(e),"Collection cannot be empty"),b(e,"Cannot use updateItems for core collections"),Array.isArray(t)?(o(t,"keysOrQuery cannot be empty"),m={keys:t}):(o(Object.keys(t),"keysOrQuery cannot be empty"),m={query:t}),m.data=a,{path:`/items/${e}`,params:r??{},body:JSON.stringify(m),method:"PATCH"}},ho=(e,t,a)=>()=>(o(String(e),"Collection cannot be empty"),b(e,"Cannot use updateItems for core collections"),{path:`/items/${e}`,params:a??{},body:JSON.stringify(t),method:"PATCH"}),yo=(e,t,a,r)=>()=>(o(String(t),"Key cannot be empty"),o(String(e),"Collection cannot be empty"),b(e,"Cannot use updateItem for core collections"),{path:`/items/${e}/${t}`,params:r??{},body:JSON.stringify(a),method:"PATCH"});var So=(e,t,a)=>()=>(o(e,"Keys cannot be empty"),{path:"/notifications",params:a??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),uo=(e,t)=>()=>({path:"/notifications",params:t??{},body:JSON.stringify(e),method:"PATCH"}),lo=(e,t,a)=>()=>(o(e,"Key cannot be empty"),{path:`/notifications/${e}`,params:a??{},body:JSON.stringify(t),method:"PATCH"});var fo=(e,t,a)=>()=>(o(e,"Keys cannot be empty"),{path:"/operations",params:a??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),bo=(e,t)=>()=>({path:"/operations",params:t??{},body:JSON.stringify(e),method:"PATCH"}),Oo=(e,t,a)=>()=>(o(e,"Key cannot be empty"),{path:`/operations/${e}`,params:a??{},body:JSON.stringify(t),method:"PATCH"});var Qo=(e,t,a)=>()=>(o(e,"Keys cannot be empty"),{path:"/panels",params:a??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),xo=(e,t)=>()=>({path:"/panels",params:t??{},body:JSON.stringify(e),method:"PATCH"}),To=(e,t,a)=>()=>(o(e,"Key cannot be empty"),{path:`/panels/${e}`,params:a??{},body:JSON.stringify(t),method:"PATCH"});var Co=(e,t,a)=>()=>(o(e,"Keys cannot be empty"),{path:"/permissions",params:a??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),Ro=(e,t)=>()=>({path:"/permissions",params:t??{},body:JSON.stringify(e),method:"PATCH"}),go=(e,t,a)=>()=>(o(String(e),"Key cannot be empty"),{path:`/permissions/${e}`,params:a??{},body:JSON.stringify(t),method:"PATCH"});var Bo=(e,t,a)=>()=>(o(e,"Keys cannot be empty"),{path:"/policies",params:a??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),Po=(e,t)=>()=>({path:"/policies",params:t??{},body:JSON.stringify(e),method:"PATCH"}),jo=(e,t,a)=>()=>(o(String(e),"Key cannot be empty"),{path:`/policies/${e}`,params:a??{},body:JSON.stringify(t),method:"PATCH"});var Io=(e,t,a)=>()=>(o(e,"Keys cannot be empty"),{path:"/presets",params:a??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),Ao=(e,t)=>()=>({path:"/presets",params:t??{},body:JSON.stringify(e),method:"PATCH"}),Fo=(e,t,a)=>()=>(o(String(e),"Key cannot be empty"),{path:`/presets/${e}`,params:a??{},body:JSON.stringify(t),method:"PATCH"});var Eo=(e,t,a,r)=>()=>(o(e,"Collection cannot be empty"),o(t,"Field cannot be empty"),{path:`/relations/${e}/${t}`,params:r??{},body:JSON.stringify(a),method:"PATCH"});var wo=(e,t,a)=>()=>(o(e,"Keys cannot be empty"),{path:"/roles",params:a??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),No=(e,t)=>()=>({path:"/roles",params:t??{},body:JSON.stringify(e),method:"PATCH"}),vo=(e,t,a)=>()=>(o(e,"Key cannot be empty"),{path:`/roles/${e}`,params:a??{},body:JSON.stringify(t),method:"PATCH"});var Uo=(e,t)=>()=>({path:"/settings",params:t??{},body:JSON.stringify(e),method:"PATCH"});var Jo=(e,t,a)=>()=>(o(e,"Keys cannot be empty"),{path:"/shares",params:a??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),Do=(e,t)=>()=>({path:"/shares",params:t??{},body:JSON.stringify(e),method:"PATCH"}),$o=(e,t,a)=>()=>(o(e,"Key cannot be empty"),{path:`/shares/${e}`,params:a??{},body:JSON.stringify(t),method:"PATCH"});var ko=(e,t,a)=>()=>(o(String(e),"Collection cannot be empty"),b(e,"Cannot use updateSingleton for core collections"),{path:`/items/${e}`,params:a??{},body:JSON.stringify(t),method:"PATCH"});var _o=(e,t,a)=>()=>(o(e,"Keys cannot be empty"),{path:"/translations",params:a??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),Go=(e,t)=>()=>({path:"/translations",params:t??{},body:JSON.stringify(e),method:"PATCH"}),Ko=(e,t,a)=>()=>(o(String(e),"Key cannot be empty"),{path:`/translations/${e}`,params:a??{},body:JSON.stringify(t),method:"PATCH"});var Wo=(e,t,a)=>()=>(o(e,"Keys cannot be empty"),{path:"/users",params:a??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),Lo=(e,t)=>()=>({path:"/users",params:t??{},body:JSON.stringify(e),method:"PATCH"}),Ho=(e,t,a)=>()=>(o(e,"Key cannot be empty"),{path:`/users/${e}`,params:a??{},body:JSON.stringify(t),method:"PATCH"}),Vo=(e,t)=>()=>({path:"/users/me",params:t??{},body:JSON.stringify(e),method:"PATCH"});var Mo=(e,t,a)=>()=>(o(e,"Keys cannot be empty"),{path:"/versions",params:a??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),qo=(e,t)=>()=>({path:"/versions",params:t??{},body:JSON.stringify(e),method:"PATCH"}),zo=(e,t,a)=>()=>(o(e,"Key cannot be empty"),{path:`/versions/${e}`,params:a??{},body:JSON.stringify(t),method:"PATCH"});var Xo=(e,t,a)=>()=>(o(e,"Keys cannot be empty"),{path:"/webhooks",params:a??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),Yo=(e,t,a)=>()=>(o(String(e),"Key cannot be empty"),{path:`/webhooks/${e}`,params:a??{},body:JSON.stringify(t),method:"PATCH"});var Zo=()=>()=>({method:"POST",path:"/utils/cache/clear"});var er=(e,t,a,r)=>()=>({method:"POST",path:`/utils/export/${e}`,body:JSON.stringify({format:t,query:a,file:r})});var tr=(e,t,a)=>()=>e==="GET"?{path:`/flows/trigger/${t}`,params:a??{},method:"GET"}:{path:`/flows/trigger/${t}`,body:JSON.stringify(a??{}),method:"POST"};var ar=e=>()=>({method:"POST",path:"/utils/hash/generate",body:JSON.stringify({string:e})}),or=(e,t)=>()=>({method:"POST",path:"/utils/hash/verify",body:JSON.stringify({string:e,hash:t})});var rr=(e,t)=>()=>({path:`/utils/import/${e}`,method:"POST",body:t,headers:{"Content-Type":"multipart/form-data"}});var mr=(e,t)=>()=>({path:`/operations/trigger/${e}`,body:JSON.stringify(t??{}),method:"POST"});var sr=(e,t,a="cookie")=>()=>({path:"/shares/auth",method:"POST",body:JSON.stringify({share:e,password:t,mode:a})}),nr=(e,t)=>()=>({path:"/shares/invite",method:"POST",body:JSON.stringify({share:e,emails:t})}),ir=e=>()=>({path:`/shares/info/${e}`,method:"GET"});var pr=(e,t,a)=>()=>({method:"POST",path:`/utils/sort/${e}`,body:JSON.stringify({item:t,to:a})});var cr=(e,t,a)=>()=>({path:"/users/invite",method:"POST",body:JSON.stringify({email:e,role:t,...a?{invite_url:a}:{}})}),hr=(e,t)=>()=>({path:"/users/invite/accept",method:"POST",body:JSON.stringify({token:e,password:t})}),yr=(e,t,a={})=>()=>({path:"/users/register",method:"POST",body:JSON.stringify({email:e,password:t,...a})}),Sr=e=>()=>({path:"/users/register/verify-email",params:{token:e},method:"GET"}),dr=e=>()=>({path:"/users/me/tfa/generate",method:"POST",body:JSON.stringify({password:e})}),ur=(e,t)=>()=>({path:"/users/me/tfa/enable",method:"POST",body:JSON.stringify({secret:e,otp:t})}),lr=e=>()=>({path:"/users/me/tfa/disable",method:"POST",body:JSON.stringify({otp:e})});var fr=(e,t)=>()=>(o(e,"ID cannot be empty"),{path:`/versions/${e}/save`,method:"POST",body:JSON.stringify(t)}),br=e=>()=>(o(e,"ID cannot be empty"),{path:`/versions/${e}/compare`,method:"GET"}),Or=(e,t,a)=>()=>(o(e,"ID cannot be empty"),{path:`/versions/${e}/promote`,method:"POST",body:JSON.stringify(a?{mainHash:t,fields:a}:{mainHash:t})});var Qr=e=>()=>({method:"GET",path:"/utils/random/string",params:e!==void 0?{length:e}:{}});var xr={},Tr=(e={})=>t=>{let a={...xr,...e};return{async request(r){let m=r();if(m.headers||(m.headers={}),"Content-Type"in m.headers?m.headers["Content-Type"]==="multipart/form-data"&&delete m.headers["Content-Type"]:m.headers["Content-Type"]="application/json","getToken"in this){let h=await this.getToken();h&&(m.headers||(m.headers={}),m.headers.Authorization=`Bearer ${h}`)}let p=C(t.url,m.path,m.params),n={method:m.method??"GET",headers:m.headers??{}};"credentials"in a&&(n.credentials=a.credentials),m.body&&(n.body=m.body),m.onRequest&&(n=await m.onRequest(n)),a.onRequest&&(n=await a.onRequest(n));let c=await R(p.toString(),n,t.globals.fetch);return"onResponse"in m&&(c=await m.onResponse(c,n)),"onResponse"in e&&(c=await e.onResponse(c,n)),c}}};function Cr(e,t){return()=>{let a=e();return typeof t=="function"?a.onRequest=t:a.onRequest=r=>({...r,...t}),a}}function Rr(e){return()=>{let t=e();return t.method==="GET"&&t.params&&(t.method="SEARCH",t.body=JSON.stringify({query:{...t.params,fields:U(t.params.fields??[])}}),delete t.params),t}}function gr(e,t){return()=>{let a=t();return e&&(a.headers||(a.headers={}),a.headers.Authorization=`Bearer ${e}`),a}}function Br(e){return()=>e}0&&(module.exports={acceptUserInvite,aggregate,auth,authenticateShare,authentication,clearCache,compareContentVersion,createCollection,createComment,createContentVersion,createContentVersions,createDashboard,createDashboards,createField,createFlow,createFlows,createFolder,createFolders,createItem,createItems,createNotification,createNotifications,createOperation,createOperations,createPanel,createPanels,createPermission,createPermissions,createPolicies,createPolicy,createPreset,createPresets,createRelation,createRole,createRoles,createSambaBO,createShare,createShares,createTranslation,createTranslations,createUser,createUsers,createWebhook,createWebhooks,customEndpoint,deleteCollection,deleteComment,deleteContentVersion,deleteContentVersions,deleteDashboard,deleteDashboards,deleteField,deleteFile,deleteFiles,deleteFlow,deleteFlows,deleteFolder,deleteFolders,deleteItem,deleteItems,deleteNotification,deleteNotifications,deleteOperation,deleteOperations,deletePanel,deletePanels,deletePermission,deletePermissions,deletePolicies,deletePolicy,deletePreset,deletePresets,deleteRelation,deleteRole,deleteRoles,deleteShare,deleteShares,deleteTranslation,deleteTranslations,deleteUser,deleteUsers,deleteWebhook,deleteWebhooks,disableTwoFactor,enableTwoFactor,formatFields,generateHash,generateTwoFactorSecret,generateUid,getAuthEndpoint,graphql,importFile,inviteShare,inviteUser,login,logout,memoryStorage,messageCallback,passwordRequest,passwordReset,pong,promoteContentVersion,queryToParams,randomString,readActivities,readActivity,readAssetArrayBuffer,readAssetBlob,readAssetRaw,readCollection,readCollections,readContentVersion,readContentVersions,readDashboard,readDashboards,readExtensions,readField,readFields,readFieldsByCollection,readFile,readFiles,readFlow,readFlows,readFolder,readFolders,readGraphqlSdl,readItem,readItemPermissions,readItems,readMe,readNotification,readNotifications,readOpenApiSpec,readOperation,readOperations,readPanel,readPanels,readPermission,readPermissions,readPolicies,readPolicy,readPolicyGlobals,readPreset,readPresets,readProviders,readRelation,readRelationByCollection,readRelations,readRevision,readRevisions,readRole,readRoles,readRolesMe,readSettings,readShare,readShareInfo,readShares,readSingleton,readTranslation,readTranslations,readUser,readUserPermissions,readUsers,readWebhook,readWebhooks,realtime,refresh,registerUser,registerUserVerify,rest,saveToContentVersion,schemaApply,schemaDiff,schemaSnapshot,serverHealth,serverInfo,serverPing,sleep,staticToken,throwIfCoreCollection,throwIfEmpty,triggerFlow,triggerOperation,updateCollection,updateCollectionsBatch,updateComment,updateContentVersion,updateContentVersions,updateContentVersionsBatch,updateDashboard,updateDashboards,updateDashboardsBatch,updateExtension,updateField,updateFile,updateFiles,updateFilesBatch,updateFlow,updateFlows,updateFlowsBatch,updateFolder,updateFolders,updateFoldersBatch,updateItem,updateItems,updateItemsBatch,updateMe,updateNotification,updateNotifications,updateNotificationsBatch,updateOperation,updateOperations,updateOperationsBatch,updatePanel,updatePanels,updatePanelsBatch,updatePermission,updatePermissions,updatePermissionsBatch,updatePolicies,updatePoliciesBatch,updatePolicy,updatePreset,updatePresets,updatePresetsBatch,updateRelation,updateRole,updateRoles,updateRolesBatch,updateSettings,updateShare,updateShares,updateSharesBatch,updateSingleton,updateTranslation,updateTranslations,updateTranslationsBatch,updateUser,updateUsers,updateUsersBatch,updateWebhook,updateWebhooks,uploadFiles,utilitySort,utilsExport,utilsImport,verifyHash,withOptions,withSearch,withToken});
//# sourceMappingURL=index.cjs.map